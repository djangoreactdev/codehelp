version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  production_django_media: {}
  production_django_static: {}
  production_client_static: {}

services:
  codehelp-api: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    # container_name: codehelp-api
    image: codehelp-api:1.0.2
    volumes:
      - production_django_media:/app/codehelp/media
      # - production_django_static:/app/staticfiles
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: codehelp_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  # traefik:
  #   build:
  #     context: .
  #     dockerfile: ./compose/production/traefik/Dockerfile
  #   image: codehelp_production_traefik
  #   depends_on:
  #     - django
  #   volumes:
  #     - production_traefik:/etc/traefik/acme
  #   ports:
  #     - '0.0.0.0:80:80'
  #     - '0.0.0.0:443:443'
  #     - '0.0.0.0:5555:5555'

  redis:
    image: redis:6

  celeryworker:
    <<: *django
    image: codehelp_production_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: codehelp_production_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: codehelp_production_flower
    command: /start-flower

  codehelp-front:
    build:
        context: ./client
        dockerfile: ./docker/production/Dockerfile
    container_name: codehelp-front
    
    image: codehelp-front:1.0.1
    restart: unless-stopped
    volumes:
        # - ./client:/app
        # - /app/node_modules
        - production_django_media:/usr/share/nginx/media:ro
        - production_django_static:/usr/share/nginx/static:ro
        # - production_client_static:/usr/share/nginx/html:ro
    ports:
        - "3000:3000"

  # nginx:
  #   build:
  #     context: .
  #     dockerfile: ./compose/production/nginx/Dockerfile
  #   image: codehelp_local_nginx
  #   depends_on:
  #     - django
  #   volumes:
  #     - production_django_media:/usr/share/nginx/media:ro
  #     - production_django_static:/usr/share/nginx/static:ro
  #     - production_client_static:/usr/share/nginx/html:ro
  #   ports:
  #       - "8080:80"